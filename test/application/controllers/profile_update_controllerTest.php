<?php

include_once "/../../../application/controllers/profile_update_controller.php";
session_start();
$_SESSION["id"] = 9;
/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-12-28 at 15:54:58.
 */
class ProfileUpdateControllerTest extends PHPUnit_Framework_TestCase {

    /**
     * @var ProfileUpdateController
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new ProfileUpdateController;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers ProfileUpdateController::profileUpdate
     * @todo   Implement testProfileUpdate().
     */
    public function testProfileUpdateNoChanges() {
        $this->assertEquals(
                array("1"), 
                $this->object->profileUpdate("testName", "testDisplay", "testPassword", "test@test.com", "1212212112", "test", "test 13", "160 33", "39.3854631332584", "22.1632351250000")
        );
    }
    
    /**
     * @covers ProfileUpdateController::profileUpdate
     * @todo   Implement testProfileUpdate().
     */
    public function testProfileUpdateWithChanges() {
        $this->assertEquals(
                array("1"), 
                $this->object->profileUpdate("testName123", "testDisplay123", "testPassword123", "test123@test.com", "1212212112", "test", "test 13", "160 33", "39.3854631332584", "22.1632351250000")
        );
    }
    
    /**
     * @covers ProfileUpdateController::profileUpdate
     * @todo   Implement testProfileUpdate().
     */
    public function testProfileUpdateEmpty() {
        $this->assertEquals(
                array(-2, -4, -6, -9, -12, -14, -15, -16, -17, -18), 
                $this->object->profileUpdate("", "", "", "", "", "", "", "", "", "")
        );
    }
    
    /**
     * @covers ProfileUpdateController::profileUpdate
     * @todo   Implement testProfileUpdate().
     */
    public function testProfileUpdateInvalidInput() {
        $this->assertEquals(
                array(-3, -5, -7, -10, -13, 0, 0, 0, 0, 0), 
                $this->object->profileUpdate("#$%#^&^%&", "#$%#^&^%&", "#$%#^&^%&", "#$%#^&^%&", "#$%#^&^%&", "test", "test 13", "160 33", "39.3854631332584", "22.1632351250000")
        );
    }
    
    /**
     * @covers ProfileUpdateController::profileUpdate
     * @todo   Implement testProfileUpdate().
     */
    public function testProfileUpdateAlreadyExists() {
        $this->assertEquals(
                array(-1, 0, 0, -8, -11, 0, 0, 0, 0, 0), 
                $this->object->profileUpdate("carrefour", "testDisplay", "testPassword", "carrefour_serres@gmail.com", "2321056230", "test", "test 13", "160 33", "39.3854631332584", "22.1632351250000")
        );
    }
    
    /**
     * @covers ProfileUpdateController::compName
     * @todo   Implement testCompName().
     */
    public function testCompName() {
        $this->assertEquals(
                0, 
                $this->object->CompName("testName")
        );
    }

    /**
     * @covers ProfileUpdateController::displayName
     * @todo   Implement testDisplayName().
     */
    public function testDisplayName() {
        $this->assertEquals(
                0, 
                $this->object->DisplayName("testName")
        );
    }

    /**
     * @covers ProfileUpdateController::password
     * @todo   Implement testPassword().
     */
    public function testPassword() {
        $this->assertEquals(
                0, 
                $this->object->password("123456789")
        );
    }

    /**
     * @covers ProfileUpdateController::email
     * @todo   Implement testEmail().
     */
    public function testEmail() {
        $this->assertEquals(
                0, 
                $this->object->email("testEmail@gmail.com")
        );
    }

    /**
     * @covers ProfileUpdateController::phone
     * @todo   Implement testPhone().
     */
    public function testPhone() {
        $this->assertEquals(
                0, 
                $this->object->phone("2310790790")
        );
    }

    /**
     * @covers ProfileUpdateController::city
     * @todo   Implement testCity().
     */
    public function testCity() {
        $this->assertEquals(
                0, 
                $this->object->city("thessaloniki")
        );
    }

    /**
     * @covers ProfileUpdateController::address
     * @todo   Implement testAddress().
     */
    public function testAddress() {
        $this->assertEquals(
                0, 
                $this->object->address("emporiou 10")
        );
    }

    /**
     * @covers ProfileUpdateController::postalCode
     * @todo   Implement testPostalCode().
     */
    public function testPostalCode() {
        $this->assertEquals(
                0, 
                $this->object->postalCode("57100")
        );
    }

    /**
     * @covers ProfileUpdateController::latitude
     * @todo   Implement testLatitude().
     */
    public function testLatitude() {
        $this->assertEquals(
                0, 
                $this->object->latitude("40.401000")
        );
    }

    /**
     * @covers ProfileUpdateController::longitude
     * @todo   Implement testLongitude().
     */
    public function testLongitude() {
        $this->assertEquals(
                0, 
                $this->object->longitude("40.401000")
        );
    }

}
